{"version":3,"sources":["Components/Statistics/Statistics.module.css","Components/FeedbackOptions/FeedbackOptions.module.css","Components/Section/Section.module.css","Components/Notification/Notification.module.css","Components/Feedback/Feedback.module.css","Components/FeedbackOptions/FeedbackOptions.jsx","Components/Section/Section.jsx","Components/Statistics/Statistics.jsx","Components/Notification/Notification.jsx","Components/Feedback/Feedback.jsx","App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onLeaveFeedback","className","s","buttonList","map","name","index","button","type","onClick","Section","title","children","wrapper","mainTitle","Statistics","good","neutral","bad","totalFeedback","positivePercentage","positive","Notification","message","Feedback","useState","setGood","setNeutral","setBad","variables","countTotalFeedback","Object","values","reduce","acc","currentValue","countPositiveFeedbackPercentage","Percentage","value","Math","round","key","keys","container","e","target","prevState","Number","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.322561f3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"options\":\"Statistics_options__1NBeR\",\"good\":\"Statistics_good__W9fDm\",\"neutral\":\"Statistics_neutral__39Qmj\",\"bad\":\"Statistics_bad__3K0a_\",\"positive\":\"Statistics_positive__3BjBf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__3Wom5\",\"buttonList\":\"FeedbackOptions_buttonList__2gCIl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Section_wrapper__3gPqy\",\"mainTitle\":\"Section_mainTitle__6rr6C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Notification_title__1cHZm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Feedback_container__2qhK6\"};","import PropTypes from \"prop-types\";\r\nimport s from \"./FeedbackOptions.module.css\";\r\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\r\n  return (\r\n    <ul className={s.buttonList}>\r\n      {options.map((name, index) => (\r\n        <li key={index}>\r\n          <button\r\n            className={s.button}\r\n            type=\"button\"\r\n            name={name}\r\n            onClick={onLeaveFeedback}\r\n          >\r\n            {name}\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\nexport default FeedbackOptions;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Section.module.css\";\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section className={s.wrapper}>\r\n      <h2 className={s.mainTitle}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\nexport default Section;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Statistics.module.css\";\r\nfunction Statistics({ good, neutral, bad, totalFeedback, positivePercentage }) {\r\n  return (\r\n    <section>\r\n      <p className={s.options + \" \" + s.good}>\r\n        Good: <span>{good}</span>\r\n      </p>\r\n      <p className={s.options + \" \" + s.neutral}>\r\n        Neutral: <span>{neutral}</span>\r\n      </p>\r\n      <p className={s.options + \" \" + s.bad}>\r\n        Bad: <span>{bad}</span>\r\n      </p>\r\n      <p className={s.options}>\r\n        Total: <span>{totalFeedback}</span>\r\n      </p>\r\n      <p className={s.options + \" \" + s.positive}>\r\n        Positive feedback:\r\n        <span>{positivePercentage}%</span>\r\n      </p>\r\n    </section>\r\n  );\r\n}\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  totalFeedback: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\nexport default Statistics;\r\n","import PropTypes from \"prop-types\";\r\nimport s from \"./Notification.module.css\";\r\nfunction Notification({ message }) {\r\n  return <p className={s.title}>{message}</p>;\r\n}\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\nexport default Notification;\r\n","import { useState } from \"react\";\r\nimport FeedbackOptions from \"../FeedbackOptions/FeedbackOptions\";\r\nimport Section from \"../Section/Section\";\r\nimport Statistics from \"../Statistics/Statistics\";\r\nimport Notification from \"../Notification/Notification\";\r\nimport s from \"./Feedback.module.css\";\r\n\r\nfunction Feedback() {\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n\r\n  const handleClick = (e) => {\r\n    const option = e.target.name;\r\n    // eslint-disable-next-line default-case\r\n    switch (option) {\r\n      case \"good\":\r\n        setGood((prevState) => prevState + 1);\r\n\r\n        break;\r\n      case \"neutral\":\r\n        setNeutral((prevState) => prevState + 1);\r\n\r\n        break;\r\n      case \"bad\":\r\n        setBad((prevState) => prevState + 1);\r\n\r\n        break;\r\n    }\r\n  };\r\n\r\n  const variables = { good, neutral, bad };\r\n\r\n  const countTotalFeedback = () => {\r\n    return Object.values(variables).reduce(\r\n      (acc, currentValue) => acc + currentValue,\r\n      0\r\n    );\r\n  };\r\n\r\n  const countPositiveFeedbackPercentage = () => {\r\n    const arr = Object.values(variables);\r\n    const Percentage = arr.map((value) => {\r\n      return (value * 100) / countTotalFeedback();\r\n    });\r\n    return Math.round(Percentage[0]);\r\n  };\r\n\r\n  const key = Object.keys(variables);\r\n\r\n  return (\r\n    <div className={s.container}>\r\n      <Section title=\"Please leave feedback\">\r\n        <FeedbackOptions onLeaveFeedback={handleClick} options={key} />\r\n      </Section>\r\n      <Section title=\"Statistics\">\r\n        {countTotalFeedback() === 0 ? (\r\n          <Notification message=\"No feedback given\" />\r\n        ) : (\r\n          <Statistics\r\n            good={good}\r\n            neutral={neutral}\r\n            bad={bad}\r\n            totalFeedback={countTotalFeedback()}\r\n            positivePercentage={\r\n              Number(countPositiveFeedbackPercentage())\r\n                ? countPositiveFeedbackPercentage()\r\n                : 0\r\n            }\r\n          />\r\n        )}\r\n      </Section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Feedback;\r\n","import \"./App.css\";\nimport Feedback from \"./Components/Feedback/Feedback\";\n\nfunction App() {\n  return (\n    <div>\n      <Feedback />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}